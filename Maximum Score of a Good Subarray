Maximum Score of a Good Subarray
Greedy Approch
class Solution {
public:
    int maximumScore(vector<int>& nums, int k) {
        int i =k  ;
        int n = nums.size();
        int j =k;
        int currmin = nums[k];
        int result = nums[k];

        while(i>0 || j<n-1 ){
            int leftmin= (i>0) ? nums[i-1]: 0;
            int rightmin = (j<n-1) ? nums[j+1]: 0;

            if(leftmin< rightmin){
                j++;
                currmin = min(currmin , nums[j]);
            }
            else{
                i--;
                currmin = min(currmin , nums[i]);
            }

            result = max(result, currmin*(j-i+1));
        }
        return result;
    }
};
