1857. Largest Color Value in a Directed Graph

class Solution {
public:
    int largestPathValue(string colors, vector<vector<int>>& edges) {
        unordered_map<int, vector<int>> adj;
        int n = colors.size();
        vector<int> indegree(n, 0);
        for(auto edge: edges){
            int u = edge[0];
            int v= edge[1];

            adj[u].push_back(v);
            indegree[v]++;
        }

        queue<int> q;
        vector<vector<int>> dp(n , vector<int>(26,0));
        for(int i =0 ; i<n ; i++){
            if(indegree[i]==0) 
            { q.push(i);
              dp[i][colors[i]-'a'] =1;
            }
        }
        int answer=0, countNodes=0;

        while(!q.empty()){
            int u = q.front();
            q.pop();
            countNodes++;

            answer= max(answer, dp[u][colors[u]-'a']);
            for(auto v: adj[u]){
                for(int i =0 ; i< 26 ; i++)
                dp[v][i]= max(dp[v][i], dp[u][i]+(colors[v]-'a'==i));

                  indegree[v]--;
                if(indegree[v]==0) 
                    q.push(v);
            }
        }
        if(countNodes< n) return -1;
        return answer;
    }
};
