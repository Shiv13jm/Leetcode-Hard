asked in Google

664. Strange Printer

class Solution {
public:
    int n ;
    vector<vector<int>>dp;
    int solve( int l, int r, string s){
        if(l==r) return 1;
        if(l>r) return 0;
        if(dp[l][r]!=-1) return dp[l][r]; 
        //basic approach
        int i=l+1;
        while(s[i]==s[l] && i<=r) i++;
        if (i==r+1) return 1;

        int basic= 1+solve(i,r, s);

        //greedy approach
        int res=INT_MAX;
        for(int j =i ; j<=r; j++){
            if(s[j]==s[l]){
                int ans= solve(i,j-1,s)+solve(j,r,s);
                res=min(res,ans);
            }
        }
         return dp[l][r]=min(res, basic);
    }
    int strangePrinter(string s) {
       n = s.size();
       dp.resize(n, vector<int>(n+1,-1)); 
       return solve(0,n-1,s);
    }
};
